/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.view;

import com.forms.PanelCall;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;
import uk.co.caprica.vlcj.binding.LibVlc;
import uk.co.caprica.vlcj.component.EmbeddedMediaListPlayerComponent;
import uk.co.caprica.vlcj.component.EmbeddedMediaPlayerComponent;
import uk.co.caprica.vlcj.runtime.RuntimeUtil;

/**
 *
 * @author baptista
 */
public class Principal extends javax.swing.JFrame {

    private String textToMove;
    static String vlcPath;
    private JPanel panelCall;

    /**
     * Creates new form Main
     */
    public Principal() {
        initComponents();
        setLayout(new BorderLayout());
        EmbeddedMediaPlayerComponent player = new EmbeddedMediaListPlayerComponent();
        setSize(new Dimension(700, 500));
        setLocationRelativeTo(null);

        textToMove = "Sistema de Atendimento ao Público - Provide by Cannonical Tree(©2023) - D. Baptista";

        animText();

        panelCall = new PanelCall(this);

        getContentPane().add(panelCall, BorderLayout.EAST);
        panelCall.setPreferredSize(new Dimension(200, 0));
        panelCall.setBackground(Color.WHITE);


        try {
            player.getMediaPlayer().prepareMedia(new File(getClass().getResource("/Metaverso.mp4").toURI()).getPath());
            player.getMediaPlayer().setVolume(0);

        } catch (Exception e) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, e);
        }
        getContentPane().add(player, BorderLayout.CENTER);
        player.getMediaPlayer().start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        NativeLibrary.addSearchPath("libvlc", "C:\\Program Files\\VideoLAN\\VLC");
        Native.loadLibrary(RuntimeUtil.getLibVlcLibraryName(), LibVlc.class);
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);

            }
        });
    }

    private void animText() {

        PanelMove move = new PanelMove(textToMove, 130);
        this.getContentPane().add(move, BorderLayout.SOUTH);
        move.start();
    }

    public class PanelMove extends JPanel implements ActionListener {

        private static final int RATE = 12;
        Timer time = new Timer(1000 / RATE, this);
        JLabel label = new JLabel();
        final String s;
        final int n;
        int index;

        public PanelMove(String text, int n) {

            
            setBackground(Color.WHITE);
            
            if (text == null) {
                throw new IllegalArgumentException("Texto nulo ou tamanho do texto menor do que 1");

            }

            StringBuilder builder = new StringBuilder(n);
            for (int i = 0; i < n; i++) {
                builder.append(" ");

            }

            this.s = builder + text + builder;
            this.n = n;
            label.setFont(new Font("Verdana", Font.BOLD, 20));
            label.setForeground(Color.DARK_GRAY);
            label.setText(builder.toString());
            this.add(label);

        }

        public void start() {
            time.start();
        }

        public void stop() {
            time.stop();
        }

        public void actionPerformed(ActionEvent evt) {

            index++;

            if (index > s.length() - n) {
                index = 0;
            }

            label.setText(s.substring(index, index + n));
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
